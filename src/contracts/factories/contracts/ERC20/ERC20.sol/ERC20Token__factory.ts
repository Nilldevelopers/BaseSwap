/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../../contracts/ERC20/ERC20.sol/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011e4380380620011e48339810160408190526200003491620003ae565b8282826003620000458382620004c6565b506004620000548282620004c6565b50506005805460ff19169055506001600160a01b0381166200009157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200009c81620000ce565b50620000c533620000b06012600a620006a7565b620000bf90620186a0620006bf565b62000128565b505050620006ef565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001545760405163ec442f0560e01b81526000600482015260240162000088565b620001626000838362000166565b5050565b6200017383838362000178565b505050565b620001826200018f565b62000173838383620001b6565b60055460ff1615620001b45760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b038316620001e5578060026000828254620001d99190620006d9565b90915550620002599050565b6001600160a01b038316600090815260208190526040902054818110156200023a5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000088565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002775760028054829003905562000296565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002dc91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200031157600080fd5b81516001600160401b03808211156200032e576200032e620002e9565b604051601f8301601f19908116603f01168101908282118183101715620003595762000359620002e9565b816040528381526020925086838588010111156200037657600080fd5b600091505b838210156200039a57858201830151818301840152908201906200037b565b600093810190920192909252949350505050565b600080600060608486031215620003c457600080fd5b83516001600160a01b0381168114620003dc57600080fd5b60208501519093506001600160401b0380821115620003fa57600080fd5b6200040887838801620002ff565b935060408601519150808211156200041f57600080fd5b506200042e86828701620002ff565b9150509250925092565b600181811c908216806200044d57607f821691505b6020821081036200046e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017357600081815260208120601f850160051c810160208610156200049d5750805b601f850160051c820191505b81811015620004be57828155600101620004a9565b505050505050565b81516001600160401b03811115620004e257620004e2620002e9565b620004fa81620004f3845462000438565b8462000474565b602080601f831160018114620005325760008415620005195750858301515b600019600386901b1c1916600185901b178555620004be565b600085815260208120601f198616915b82811015620005635788860151825594840194600190910190840162000542565b5085821015620005825787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005e9578160001904821115620005cd57620005cd62000592565b80851615620005db57918102915b93841c9390800290620005ad565b509250929050565b6000826200060257506001620006a1565b816200061157506000620006a1565b81600181146200062a5760028114620006355762000655565b6001915050620006a1565b60ff84111562000649576200064962000592565b50506001821b620006a1565b5060208310610133831016604e8410600b84101617156200067a575081810a620006a1565b620006868383620005a8565b80600019048211156200069d576200069d62000592565b0290505b92915050565b6000620006b860ff841683620005f1565b9392505050565b8082028115828204841417620006a157620006a162000592565b80820180821115620006a157620006a162000592565b610ae580620006ff6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a25780638da5cb5b116100715780638da5cb5b1461021757806395d89b4114610240578063a9059cbb14610248578063dd62ed3e1461025b578063f2fde38b1461029457600080fd5b806370a08231146101cb578063715018a6146101f457806379cc6790146101fc5780638456cb591461020f57600080fd5b8063313ce567116100e9578063313ce567146101815780633f4ba83a1461019057806340c10f191461019a57806342966c68146101ad5780635c975abb146101c057600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102a7565b6040516101309190610916565b60405180910390f35b61014c610147366004610980565b610339565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c3660046109aa565b610353565b60405160128152602001610130565b610198610377565b005b6101986101a8366004610980565b610389565b6101986101bb3660046109e6565b61039f565b60055460ff1661014c565b6101606101d93660046109ff565b6001600160a01b031660009081526020819052604090205490565b6101986103ac565b61019861020a366004610980565b6103be565b6101986103d3565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610130565b6101236103e3565b61014c610256366004610980565b6103f2565b610160610269366004610a21565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101986102a23660046109ff565b610400565b6060600380546102b690610a54565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610a54565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b600033610347818585610440565b60019150505b92915050565b600033610361858285610452565b61036c8585856104d0565b506001949350505050565b61037f61052f565b610387610562565b565b61039161052f565b61039b82826105b4565b5050565b6103a933826105ea565b50565b6103b461052f565b6103876000610620565b6103c9823383610452565b61039b82826105ea565b6103db61052f565b61038761067a565b6060600480546102b690610a54565b6000336103478185856104d0565b61040861052f565b6001600160a01b03811661043757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103a981610620565b61044d83838360016106b7565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104ca57818110156104bb57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161042e565b6104ca848484840360006106b7565b50505050565b6001600160a01b0383166104fa57604051634b637e8f60e11b81526000600482015260240161042e565b6001600160a01b0382166105245760405163ec442f0560e01b81526000600482015260240161042e565b61044d83838361078c565b6005546001600160a01b036101009091041633146103875760405163118cdaa760e01b815233600482015260240161042e565b61056a610797565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166105de5760405163ec442f0560e01b81526000600482015260240161042e565b61039b6000838361078c565b6001600160a01b03821661061457604051634b637e8f60e11b81526000600482015260240161042e565b61039b8260008361078c565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6106826107ba565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105973390565b6001600160a01b0384166106e15760405163e602df0560e01b81526000600482015260240161042e565b6001600160a01b03831661070b57604051634a1406b160e11b81526000600482015260240161042e565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104ca57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161077e91815260200190565b60405180910390a350505050565b61044d8383836107de565b60055460ff1661038757604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103875760405163d93c066560e01b815260040160405180910390fd5b6107e66107ba565b61044d8383836001600160a01b03831661081757806002600082825461080c9190610a8e565b909155506108899050565b6001600160a01b0383166000908152602081905260409020548181101561086a5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161042e565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166108a5576002805482900390556108c4565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161090991815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561094357858101830151858201604001528201610927565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461097b57600080fd5b919050565b6000806040838503121561099357600080fd5b61099c83610964565b946020939093013593505050565b6000806000606084860312156109bf57600080fd5b6109c884610964565b92506109d660208501610964565b9150604084013590509250925092565b6000602082840312156109f857600080fd5b5035919050565b600060208284031215610a1157600080fd5b610a1a82610964565b9392505050565b60008060408385031215610a3457600080fd5b610a3d83610964565b9150610a4b60208401610964565b90509250929050565b600181811c90821680610a6857607f821691505b602082108103610a8857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561034d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220b45cd2602cc6fa6cb196f226194b12309d37cb36debbece6b45d3f41a70a240164736f6c63430008140033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    tokenName: string,
    tokenSymbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
